"""Script pour ins√©rer des donn√©es de d√©monstration"""
import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.database import db

def insert_demo_data():
    """Ins√®re des donn√©es de d√©monstration pour tous les modules"""
    
    print("üöÄ Insertion des donn√©es de d√©monstration...")
    
    # Connexion √† la base
    if not db.connect():
        print("‚ùå Impossible de se connecter √† la base")
        return False
    
    try:
        # 1. Clients de d√©monstration
        clients_data = [
            ("TechCorp Solutions", "Marie Dubois", "marie@techcorp.fr", "01.23.45.67.89", "15 Avenue des Champs", "Paris", "France"),
            ("Global Industries", "Pierre Martin", "pierre@global.com", "01.98.76.54.32", "42 Rue de la Paix", "Lyon", "France"),
            ("Innovation Ltd", "Sophie Bernard", "sophie@innovation.uk", "+44.20.1234.5678", "10 Oxford Street", "London", "UK"),
            ("Digital Dynamics", "Alex Johnson", "alex@digital.com", "+1.555.123.4567", "123 Tech Avenue", "San Francisco", "USA"),
            ("Euro Logistics", "Hans Mueller", "hans@euro.de", "+49.30.1234567", "Unter den Linden 1", "Berlin", "Germany")
        ]
        
        for client in clients_data:
            query = """
                INSERT INTO customers (customer_name, contact_person, email, phone, address, city, country)
                VALUES (%s, %s, %s, %s, %s, %s, %s)
            """
            db.execute_query(query, client)
        
        print("‚úÖ Clients ins√©r√©s")
        
        # 2. Entrep√¥ts de d√©monstration
        warehouses_data = [
            ("Entrep√¥t Central Paris", "Paris, √éle-de-France", 5000.0),
            ("Hub Logistique Lyon", "Lyon, Auvergne-Rh√¥ne-Alpes", 3500.0),
            ("Centre de Distribution Marseille", "Marseille, PACA", 2800.0),
            ("Plateforme Nord Lille", "Lille, Hauts-de-France", 4200.0),
            ("D√©p√¥t R√©gional Bordeaux", "Bordeaux, Nouvelle-Aquitaine", 2200.0)
        ]
        
        for warehouse in warehouses_data:
            query = """
                INSERT INTO warehouses (warehouse_name, location, capacity_m3)
                VALUES (%s, %s, %s)
            """
            db.execute_query(query, warehouse)
        
        print("‚úÖ Entrep√¥ts ins√©r√©s")
        
        # 3. Fournisseurs de d√©monstration
        suppliers_data = [
            ("TechSupply International", "Jean-Claude Vannier", "jc@techsupply.fr", "01.44.55.66.77", "Zone Industrielle Nord", "France", True),
            ("Global Components Ltd", "Sarah Wilson", "sarah@globalcomp.com", "+44.161.234.5678", "Manchester Business Park", "UK", True),
            ("Euro Electronics GmbH", "Klaus Weber", "klaus@euroelec.de", "+49.89.1234567", "M√ºnchener Strasse 45", "Germany", True),
            ("Asian Manufacturing Co", "Li Wei", "li@asianmfg.cn", "+86.21.1234.5678", "Shanghai Industrial Zone", "China", True),
            ("American Parts Corp", "Mike Thompson", "mike@amparts.com", "+1.312.555.0123", "Chicago Industrial District", "USA", False)
        ]
        
        for supplier in suppliers_data:
            query = """
                INSERT INTO suppliers (supplier_name, contact_person, email, phone, address, country, is_active)
                VALUES (%s, %s, %s, %s, %s, %s, %s)
            """
            db.execute_query(query, supplier)
        
        print("‚úÖ Fournisseurs ins√©r√©s")
        
        # 4. Produits de d√©monstration
        products_data = [
            ("LAPTOP-001", "Ordinateur Portable Pro", "√âlectronique", 850.00),
            ("MOUSE-002", "Souris Ergonomique", "√âlectronique", 45.00),
            ("CHAIR-003", "Chaise de Bureau", "Mobilier", 320.00),
            ("DESK-004", "Bureau Ajustable", "Mobilier", 580.00),
            ("PHONE-005", "T√©l√©phone IP", "√âlectronique", 120.00),
            ("TABLET-006", "Tablette Tactile", "√âlectronique", 450.00),
            ("PRINTER-007", "Imprimante Laser", "√âlectronique", 280.00),
            ("CABLE-008", "C√¢ble HDMI 2m", "√âlectronique", 25.00),
            ("MONITOR-009", "√âcran 24 pouces", "√âlectronique", 220.00),
            ("KEYBOARD-010", "Clavier M√©canique", "√âlectronique", 95.00)
        ]
        
        for product in products_data:
            query = """
                INSERT INTO skus (sku_code, product_name, category, unit_cost)
                VALUES (%s, %s, %s, %s)
            """
            db.execute_query(query, product)
        
        print("‚úÖ Produits ins√©r√©s")
        
        # 5. Commandes de d√©monstration
        orders_data = [
            (1, '2024-09-01', 'PENDING', 2850.00),
            (2, '2024-09-02', 'CONFIRMED', 1250.00),
            (3, '2024-09-03', 'SHIPPED', 3400.00),
            (4, '2024-09-04', 'DELIVERED', 890.00),
            (1, '2024-08-30', 'DELIVERED', 1650.00)
        ]
        
        for order in orders_data:
            query = """
                INSERT INTO orders (customer_id, order_date, status, total_amount)
                VALUES (%s, %s, %s, %s)
            """
            db.execute_query(query, order)
        
        print("‚úÖ Commandes ins√©r√©es")
        
        # 6. Inventaire de d√©monstration
        inventory_data = [
            (1, 1, 50, 10),  # LAPTOP-001 dans Entrep√¥t 1
            (2, 1, 200, 20), # MOUSE-002 dans Entrep√¥t 1
            (3, 2, 30, 5),   # CHAIR-003 dans Entrep√¥t 2
            (4, 2, 15, 3),   # DESK-004 dans Entrep√¥t 2
            (5, 3, 80, 15),  # PHONE-005 dans Entrep√¥t 3
            (6, 1, 35, 8),   # TABLET-006 dans Entrep√¥t 1
            (7, 4, 25, 5),   # PRINTER-007 dans Entrep√¥t 4
            (8, 5, 150, 30), # CABLE-008 dans Entrep√¥t 5
            (9, 1, 40, 8),   # MONITOR-009 dans Entrep√¥t 1
            (10, 2, 60, 12)  # KEYBOARD-010 dans Entrep√¥t 2
        ]
        
        for inv in inventory_data:
            query = """
                INSERT INTO inventory (sku_id, warehouse_id, quantity_available, safety_stock)
                VALUES (%s, %s, %s, %s)
            """
            db.execute_query(query, inv)
        
        print("‚úÖ Inventaire ins√©r√©")
        
        print("üéâ Toutes les donn√©es de d√©monstration ont √©t√© ins√©r√©es avec succ√®s!")
        return True
        
    except Exception as e:
        print(f"‚ùå Erreur lors de l'insertion: {e}")
        return False
    
    finally:
        db.close()

if __name__ == "__main__":
    insert_demo_data()
